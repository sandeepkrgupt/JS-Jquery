Jquery Method Chaining ?
there is a technique called chaining, that allows us to run multiple jQuery commands, 
one after the other, on the same element(s).
e.g -  $("#p1").css("color", "red").slideUp(2000).slideDown(2000);

Event Delegation in Jquery ?
In Event Delegation we can attach one or more event handlers for specified elements that are children of selected elements, 
and specifies a function to run when the events occur.
<script>
$(document).ready(function(){
    $("div").delegate("p", "click",function(){
        $("p").css("background-color", "pink");
    });
});
</script>
The delegate() method was deprecated in version 3.0. Use the on() method instead.
----------------------------------------------------------------------
Reading url From Browser ?
window.location.href returns the href (URL) of the current page
window.location.hostname returns the domain name of the web host
window.location.pathname returns the path and filename of the current page
window.location.protocol returns the web protocol used (http: or https:)

<p id="demo"></p>
<script>
    document.getElementById("demo").innerHTML =  window.location.href;
</script>

-----------------------------------------------------------------------------
Getting Browser , OS and User Details using javascript
<!DOCTYPE html>
<html>
<body>
<div id="example"></div>
<script type="text/javascript">
  txt = "<p>Browser CodeName: " + navigator.appCodeName + "</p>"; 
  txt+= "<p>Browser Name: " + navigator.appName + "</p>";
  txt+= "<p>Browser Version: " + navigator.appVersion + "</p>";
  txt+= "<p>Cookies Enabled: " + navigator.cookieEnabled + "</p>";
  txt+= "<p>Platform: " + navigator.platform + "</p>";
  txt+= "<p>User-agent header: " + navigator.userAgent + "</p>";
  document.getElementById("example").innerHTML=txt;
</script>
</body>
</html>
--------------------------------------------------------------------
Redirecting to another page using meta tag -
<head>
     <meta http-equiv="refresh" content="12;url=https://www.w3schools.com" />
</head>
----------------------------------------------------------------------
Jquery function to get item in array
<script>
var arr = [ 4, "Pete", 8, "John" ];
var $spans = $( "span" );
$spans.eq( 0 ).text( jQuery.inArray( "John", arr ) );
$spans.eq( 1 ).text( jQuery.inArray( 4, arr ) );
$spans.eq( 2 ).text( jQuery.inArray( "Karl", arr ) );
$spans.eq( 3 ).text( jQuery.inArray( "Pete", arr, 2 ) );
</script>
-----------------------------------------------------------------------
Jquery Css Method
<script>
$(document).ready(function(){
    $("input").focus(function(){
        $(this).css({"background-color": "#cccccc","border":"1px solid green"});
    });
    $("input").blur(function(){
        $(this).css({"background-color":"#888","border":"1px solid red"});
    });
});
</script>
-------------------------------------------------------------------------
Making Duplicate of HTML Elements using Jquery 
clone() - Jquery clone is used to make clone/duplicate of selected elements including child nodes, text and attributes
<script>
$(document).ready(function(){
    $("button").click(function(){
        $("p").clone().appendTo("body");
    });
});
</script>
------------------------------------------------------------------------
Jquery closest() -
The closest() method returns the first ancestor, first nearest parent element of the selected element.
An ancestor is a parent, grandparent, great-grandparent, and so on.
<script>
$(document).ready(function(){
    $("span").closest("ul").css({"color": "red", "border": "2px solid red"});
});
</script>
-------------------------------------------------------------------------
Jquery find()

The find() method returns descendant elements of the selected element.
A descendant is a child, grandchild, great-grandchild, and so on.

<script>
$(document).ready(function(){
    $("ul").find("li span,b").css({"color": "red", "border": "2px solid red"});
});
</script>
it will apply css on all span inside li of ul and all b element inside ul. but not on span inside ul.
-------------------------------------------------------------------------
The each() method specifies a function to run for each matched element.

<script>
$(document).ready(function(){
    $("button").click(function(){
        $("li").each(function(){
            alert($(this).text())
            //return false; to stop the loop
        });
    });
});
</script>
<li>Tea</li>
<li>Coffee</li>
<li>Milk</li>
// output - one by one it will alert  Tea, Coffee and Milk.
-------------------------------------------------------------------------
append()	Inserts content at the end of selected elements
appendTo()	Inserts HTML elements at the end of selected elements
<script>
$(document).ready(function(){
    $("#btn1").click(function(){
        $("p").append(" <b>Appended text</b>.");
        $("<b>Appended To div text</b>.").appendTo("div")
    });
});
</script>
// both will add element at the end.
--------------------------------------------------------------------------
Jquery attr() - applying html attribute using Jquery
<script>
$(document).ready(function(){
    $("button").click(function(){
        $("img").attr({"width":"500px", "height":"420px"});
    });
});
</script>
------------------------------------------------------------------------
inserting content before selected element 

<script>
$(document).ready(function(){
    $("button").click(function(){
        $("<span>Hello world!</span>").insertBefore("p");
    });
});
</script>
----------------------------------------------------------------------
Which jQuery method is used to perform an asynchronous HTTP request ?
Ans - ajax()
<script>
$(document).ready(function(){
    $("button").click(function(){
        $.ajax({
        url: "demo_test.txt", 
        success: function(result){
            $("#div1").html(result);
        }
        });
    });
});
</script>

---------------------------------------------------------------------
Which jQuery method is used to remove selected elements ?
Ans - detach()
The detach() method removes the selected elements, including all text and child nodes. However, it keeps data and events.
<script>
$(document).ready(function(){
  $("button").click(function(){
    $("p").detach();
  });
});
</script>
It will delete all paragraph inside your page/ html body.
Note - detach() is like remove(), but keeps the stored data and events associated with the matched elements.
----------------------------------------------------------------------
Jquery remove element which according to matching content

<script>
$( "button" ).click(function() {
  $( "p" ).remove( ":contains('Hello')" ); //  or $( "p" ).remove( ":contains('hello')" );
});
</script>
<p class="greeting">Hello</p>
how are
<p>you?</p>
// output - it will delete only first paragraph.

